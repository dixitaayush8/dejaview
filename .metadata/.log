!SESSION 2018-11-18 13:05:59.982 -----------------------------------------------
eclipse.buildId=4.8.0.I20180611-0500
java.version=1.8.0_144
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/rakeshkonda/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/rakeshkonda/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2018-11-18 13:06:16.996
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.egit.core 2 0 2018-11-18 13:06:17.054
!MESSAGE Builtin LFS support not present/detected
!STACK 0
java.lang.ClassNotFoundException: org.eclipse.jgit.lfs.BuiltinLFS cannot be found by org.eclipse.egit.core_5.0.0.201806131550-r
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:508)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.eclipse.egit.core.Activator.registerBuiltinLFS(Activator.java:279)
	at org.eclipse.egit.core.Activator.start(Activator.java:212)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1002)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:354)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:114)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:505)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:392)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:454)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.egit.ui.Activator$RepositoryChangeScanner.<init>(Activator.java:921)
	at org.eclipse.egit.ui.Activator.setupRepoChangeScanner(Activator.java:1034)
	at org.eclipse.egit.ui.Activator.start(Activator.java:336)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1002)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:354)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:114)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:505)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:392)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:470)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:609)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:177)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:931)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:60)
	at org.eclipse.ui.internal.services.WorkbenchServiceRegistry.getSourceProviders(WorkbenchServiceRegistry.java:174)
	at org.eclipse.ui.internal.services.SourceProviderService.readRegistry(SourceProviderService.java:104)
	at org.eclipse.ui.internal.Workbench$34.runWithException(Workbench.java:2378)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:32)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:233)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:144)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4860)
	at org.eclipse.ui.internal.StartupThreading.runWithoutExceptions(StartupThreading.java:95)
	at org.eclipse.ui.internal.Workbench.initializeDefaultServices(Workbench.java:2373)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:1654)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2859)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:597)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:656)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:592)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1498)
!SESSION 2018-11-18 23:24:57.884 -----------------------------------------------
eclipse.buildId=4.8.0.I20180611-0500
java.version=1.8.0_144
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/rakeshkonda/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/rakeshkonda/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2018-11-18 23:25:04.455
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.egit.core 2 0 2018-11-18 23:25:04.529
!MESSAGE Builtin LFS support not present/detected
!STACK 0
java.lang.ClassNotFoundException: org.eclipse.jgit.lfs.BuiltinLFS cannot be found by org.eclipse.egit.core_5.0.0.201806131550-r
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:508)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.eclipse.egit.core.Activator.registerBuiltinLFS(Activator.java:279)
	at org.eclipse.egit.core.Activator.start(Activator.java:212)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1002)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:354)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:114)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:505)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:392)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:454)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.egit.ui.Activator$RepositoryChangeScanner.<init>(Activator.java:921)
	at org.eclipse.egit.ui.Activator.setupRepoChangeScanner(Activator.java:1034)
	at org.eclipse.egit.ui.Activator.start(Activator.java:336)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1002)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:354)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:114)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:505)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:392)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:470)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:609)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:177)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:931)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:60)
	at org.eclipse.ui.internal.services.WorkbenchServiceRegistry.getSourceProviders(WorkbenchServiceRegistry.java:174)
	at org.eclipse.ui.internal.services.SourceProviderService.readRegistry(SourceProviderService.java:104)
	at org.eclipse.ui.internal.Workbench$34.runWithException(Workbench.java:2378)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:32)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:233)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:144)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4860)
	at org.eclipse.ui.internal.StartupThreading.runWithoutExceptions(StartupThreading.java:95)
	at org.eclipse.ui.internal.Workbench.initializeDefaultServices(Workbench.java:2373)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:1654)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2859)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:597)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:656)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:592)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1498)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-18 23:26:16.068
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public void mainMenu()
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, email);
		ps.setString(2, password);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("User does not exist");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(email.equals(rsEmail) && password.equals(rsPass))
				System.out.println("Welcome!" + rs.getString("firstName"));
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");

		
		Scanner scan = new Scanner(System.in);
		System.out.println("Do you have an account? [y/n]");
		boolean success = false;
		while(!scan.hasNext("[yn]")) {
			System.out.println("Please enter [y] for yes or [n] for no");
			scan.next();
		}
		String choice = scan.next();
		if(choice.equals("y")) {  //login
			boolean loggedIn = dj.login(scan, conn);
			if(loggedIn == false) {
				System.out.println("Would you like to try again? [y/n]");
				
			}
			while(loggedIn == false && scan.hasNext("[qQ]")) {
				loggedIn = dj.login(scan, conn);
				System.out.println("Would you like to try again? [y/n]");
			}
		} else {
			int registered = 0;
			try {
				registered = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registered == 1) {
				System.out.println("Successfully registered!!");
			} else {
				System.out.println("User already exists. Please log in");
				dj.login();
			}
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-18 23:26:16.097
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-18 23:26:16.098
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-18 23:54:25.299
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public void mainMenuPrompt()
	
	public int mainMenu(Scanner scan) {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			System.out.println("Main Menu");
			System.out.println("1. Login");
			System.out.println("2. Register");
			System.out.println("3. Quit");
			scan.next();
		}
		return scan.nextInt();
		
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, email);
		ps.setString(2, password);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("User does not exist");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(email.equals(rsEmail) && password.equals(rsPass))
				System.out.println("Welcome!" + rs.getString("firstName"));
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public 
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		int choice = dj.mainMenu(scan);
		dj.execute(choice)

		
		
		
		
//		boolean success = false;
//		while(!scan.hasNext("[yn]")) {
//			System.out.println("Please enter [y] for yes or [n] for no");
//			scan.next();
//		}
//		String choice = scan.next();
//		if(choice.equals("y")) {  //login
//			boolean loggedIn = dj.login(scan, conn);
//			if(loggedIn == false) {
//				System.out.println("Would you like to try again? [y/n]");
//				
//			}
//			while(loggedIn == false && scan.hasNext("[qQ]")) {
//				loggedIn = dj.login(scan, conn);
//				System.out.println("Would you like to try again? [y/n]");
//			}
//		} else {
//			int registered = 0;
//			try {
//				registered = dj.register(scan, conn);
//			} catch (SQLException e) {
//				e.printStackTrace();
//			}
//			if(registered == 1) {
//				System.out.println("Successfully registered!!");
//			} else {
//				System.out.println("User already exists. Please log in");
////				dj.login();
//			}
//		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-18 23:54:25.300
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-18 23:54:25.301
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:21:38.406
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu()
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, email);
		ps.setString(2, password);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(email.equals(rsEmail) && password.equals(rsPass))
				System.out.println("Welcome!" + rs.getString("firstName"));
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);

		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			//present choices
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:21:38.408
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:21:38.410
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:23:55.331
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, email);
		ps.setString(2, password);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(email.equals(rsEmail) && password.equals(rsPass))
				System.out.println("Welcome " + rs.getString("firstName") + "!");
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void choices()
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			//present choices
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:23:55.333
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:23:55.334
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:29:32.780
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, email);
		ps.setString(2, password);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(email.equals(rsEmail) && password.equals(rsPass))
				System.out.println("Welcome " + rs.getString("firstName") + "!");
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. Search for movie by genre");
		
	}
	
	public void adminChoices()
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			//present choices
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:29:32.781
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:29:32.783
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:35:22.756
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin()
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. Search for movie by genre");
		
	}
	
	public void adminChoices() {
		
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			//present choices
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:35:22.757
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:35:22.758
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:49:02.675
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. Search for movie by genre");
		
	}
	
	public ResultSet rateMovie()
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:49:02.678
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:49:02.678
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:49:07.712
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. Search for movie by genre");
		
	}
	
	public ResultSet rateMovie(Connection conn)
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:49:07.713
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:49:07.714
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:49:17.265
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. Search for movie by genre");
		
	}
	
	public ResultSet rateMovie(Scanner scan, Connection conn)
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:49:17.266
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:49:17.268
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:53:24.084
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. Search for movie by genre");
	}
	
	public void getMovies()
	
	public ResultSet rateMovie(Scanner scan, Connection conn) {
		String query = "INSERT INTO Rating (ratingID,userID,movieID,ratingNumber) VALUES(?,?,?,?)";
	}
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:53:24.086
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:53:24.087
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 00:53:29.640
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. Search for movie by genre");
	}
	
	public void getMovies(Connection conn)P
	
	public ResultSet rateMovie(Scanner scan, Connection conn) {
		String query = "INSERT INTO Rating (ratingID,userID,movieID,ratingNumber) VALUES(?,?,?,?)";
	}
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 00:53:29.641
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 00:53:29.642
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 01:09:12.608
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. Search for movie by genre");
	}
	
	public getMoviesByTitle()
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID/tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "/t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.println("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		
	}
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 01:09:12.609
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 01:09:12.610
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 01:22:57.157
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
	}
	
	public void viewTickets()
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.println("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		System.out.println("movieID\tmovieTitle\tgenre\tactors\tdirector\tduration\trating\treleaseYear\tupdated_on");
		while(rs.next()) {
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getDouble(7) + rs.getInt(8) + "\t" + rs.getDate(9));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID/tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "/t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.println("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		
	}
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 01:22:57.160
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 01:22:57.160
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 01:22:58.691
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
	}
	
	public void viewTickets(s)
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.println("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		System.out.println("movieID\tmovieTitle\tgenre\tactors\tdirector\tduration\trating\treleaseYear\tupdated_on");
		while(rs.next()) {
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getDouble(7) + rs.getInt(8) + "\t" + rs.getDate(9));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID/tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "/t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.println("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		
	}
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 01:22:58.693
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 01:22:58.693
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 01:23:05.243
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
	}
	
	public void viewTickets(Scanner scan, Connection conn)
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.println("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		System.out.println("movieID\tmovieTitle\tgenre\tactors\tdirector\tduration\trating\treleaseYear\tupdated_on");
		while(rs.next()) {
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getDouble(7) + rs.getInt(8) + "\t" + rs.getDate(9));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID/tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "/t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.println("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		
	}
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 01:23:05.245
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 01:23:05.245
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 01:23:10.286
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
	}
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.println("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		System.out.println("movieID\tmovieTitle\tgenre\tactors\tdirector\tduration\trating\treleaseYear\tupdated_on");
		while(rs.next()) {
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getDouble(7) + rs.getInt(8) + "\t" + rs.getDate(9));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID/tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "/t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.println("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		
	}
	
	public void adminChoices() {
		System.out.println("Admin Choices");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		dj.mainMenu(scan);
		int choice = scan.nextInt();
		if(choice == 1) {
			boolean login = false;
			while(login == false) {
				//System.out.println("To log in please enter your email and password below");
				try {
					login = dj.login(scan, conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			boolean admin = false;
			try {
				admin = dj.isAdmin(conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(admin == true) {
				dj.adminChoices();
			}
			dj.userchoices();
			while(scan.next)
		}
		else if(choice == 2) {
			int registration = 0;
			try {
				registration = dj.register(scan, conn);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(registration == 1) {
				System.out.println("Registration successful!");
				System.out.println("You've been automatically logged in");
				//present choices
			}
		}
		else {
			System.out.println("Goodbye!");
			System.exit(0);
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 01:23:10.287
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 01:23:10.289
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 02:49:04.332
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("Available Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("");

		System.out.print("Enter your choice: ");
	}
	
	public void viewUsersTickets()
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of" + count + "ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		mainMenuPrompt();
		while(scan.hasNextInt()) {
			int choice = scan.nextInt();
			scan.nextLine(); //consume \n
			if(choice == 1) {
				boolean login = false;
				while(login == false) {
					login = dj.login(scan, conn);
				}
				boolean admin = false;
				try {
					admin = dj.isAdmin(conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
				if(admin == true) {
					dj.adminChoices();
				}
				dj.userchoices();
				int optionChoice;
				while(scan.hasNextInt()) {
					optionChoice = scan.nextInt();
					scan.nextLine();
					if(optionChoice == 0) {
						System.out.println("Goodbye!");
						System.exit(0);
					}
					else if(optionChoice == 1)
						dj.rateMovie(scan, conn);
					else if(optionChoice == 2)
						dj.getMoviesByTitle(scan, conn);
					else if(optionChoice == 3)
						dj.viewTickets(scan, conn);
					else
						System.out.println("Please enter a valid choice");
					if(admin == true) {
						dj.adminChoices();
					}
					dj.userchoices();
				}
			}
			else if(choice == 2) { // register
				int register = dj.register(scan, conn);
				if(register == 1) {
					System.out.println("Successfully Registered! Please log in");
				}
				else {
					System.out.println("Could not register. Please log in");
				}
			}
			else if(choice == 3){
				System.out.println("Goodbye!");
				System.exit(0);
			}
			else {
				System.out.println("Please enter an appropriate value");
			}
			mainMenuPrompt();
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 02:49:04.343
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 02:49:04.343
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 02:49:10.889
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("Available Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("");

		System.out.print("Enter your choice: ");
	}
	
	public void viewUsersTickets(Scanner scan, Connection conn)
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of" + count + "ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		mainMenuPrompt();
		while(scan.hasNextInt()) {
			int choice = scan.nextInt();
			scan.nextLine(); //consume \n
			if(choice == 1) {
				boolean login = false;
				while(login == false) {
					login = dj.login(scan, conn);
				}
				boolean admin = false;
				try {
					admin = dj.isAdmin(conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
				if(admin == true) {
					dj.adminChoices();
				}
				dj.userchoices();
				int optionChoice;
				while(scan.hasNextInt()) {
					optionChoice = scan.nextInt();
					scan.nextLine();
					if(optionChoice == 0) {
						System.out.println("Goodbye!");
						System.exit(0);
					}
					else if(optionChoice == 1)
						dj.rateMovie(scan, conn);
					else if(optionChoice == 2)
						dj.getMoviesByTitle(scan, conn);
					else if(optionChoice == 3)
						dj.viewTickets(scan, conn);
					else
						System.out.println("Please enter a valid choice");
					if(admin == true) {
						dj.adminChoices();
					}
					dj.userchoices();
				}
			}
			else if(choice == 2) { // register
				int register = dj.register(scan, conn);
				if(register == 1) {
					System.out.println("Successfully Registered! Please log in");
				}
				else {
					System.out.println("Could not register. Please log in");
				}
			}
			else if(choice == 3){
				System.out.println("Goodbye!");
				System.exit(0);
			}
			else {
				System.out.println("Please enter an appropriate value");
			}
			mainMenuPrompt();
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 02:49:10.889
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 02:49:10.890
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 02:49:12.409
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("Available Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("");

		System.out.print("Enter your choice: ");
	}
	
	public void viewUsersTickets(Scanner scan, Connection conn) throw
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of" + count + "ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		mainMenuPrompt();
		while(scan.hasNextInt()) {
			int choice = scan.nextInt();
			scan.nextLine(); //consume \n
			if(choice == 1) {
				boolean login = false;
				while(login == false) {
					login = dj.login(scan, conn);
				}
				boolean admin = false;
				try {
					admin = dj.isAdmin(conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
				if(admin == true) {
					dj.adminChoices();
				}
				dj.userchoices();
				int optionChoice;
				while(scan.hasNextInt()) {
					optionChoice = scan.nextInt();
					scan.nextLine();
					if(optionChoice == 0) {
						System.out.println("Goodbye!");
						System.exit(0);
					}
					else if(optionChoice == 1)
						dj.rateMovie(scan, conn);
					else if(optionChoice == 2)
						dj.getMoviesByTitle(scan, conn);
					else if(optionChoice == 3)
						dj.viewTickets(scan, conn);
					else
						System.out.println("Please enter a valid choice");
					if(admin == true) {
						dj.adminChoices();
					}
					dj.userchoices();
				}
			}
			else if(choice == 2) { // register
				int register = dj.register(scan, conn);
				if(register == 1) {
					System.out.println("Successfully Registered! Please log in");
				}
				else {
					System.out.println("Could not register. Please log in");
				}
			}
			else if(choice == 3){
				System.out.println("Goodbye!");
				System.exit(0);
			}
			else {
				System.out.println("Please enter an appropriate value");
			}
			mainMenuPrompt();
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 02:49:12.411
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 02:49:12.411
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 02:49:16.444
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("Available Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("");

		System.out.print("Enter your choice: ");
	}
	
	public void viewUsersTickets(Scanner scan, Connection conn) throws SQLExcpetion
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of" + count + "ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		mainMenuPrompt();
		while(scan.hasNextInt()) {
			int choice = scan.nextInt();
			scan.nextLine(); //consume \n
			if(choice == 1) {
				boolean login = false;
				while(login == false) {
					login = dj.login(scan, conn);
				}
				boolean admin = false;
				try {
					admin = dj.isAdmin(conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
				if(admin == true) {
					dj.adminChoices();
				}
				dj.userchoices();
				int optionChoice;
				while(scan.hasNextInt()) {
					optionChoice = scan.nextInt();
					scan.nextLine();
					if(optionChoice == 0) {
						System.out.println("Goodbye!");
						System.exit(0);
					}
					else if(optionChoice == 1)
						dj.rateMovie(scan, conn);
					else if(optionChoice == 2)
						dj.getMoviesByTitle(scan, conn);
					else if(optionChoice == 3)
						dj.viewTickets(scan, conn);
					else
						System.out.println("Please enter a valid choice");
					if(admin == true) {
						dj.adminChoices();
					}
					dj.userchoices();
				}
			}
			else if(choice == 2) { // register
				int register = dj.register(scan, conn);
				if(register == 1) {
					System.out.println("Successfully Registered! Please log in");
				}
				else {
					System.out.println("Could not register. Please log in");
				}
			}
			else if(choice == 3){
				System.out.println("Goodbye!");
				System.exit(0);
			}
			else {
				System.out.println("Please enter an appropriate value");
			}
			mainMenuPrompt();
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 02:49:16.445
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 02:49:16.446
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 02:49:20.480
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("Available Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("");

		System.out.print("Enter your choice: ");
	}
	
	public void viewUsersTickets(Scanner scan, Connection conn) throws SQLException 
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of" + count + "ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all that have tickets");
		System.out.println("1002. See how many reviews each user made");
	}
	
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		mainMenuPrompt();
		while(scan.hasNextInt()) {
			int choice = scan.nextInt();
			scan.nextLine(); //consume \n
			if(choice == 1) {
				boolean login = false;
				while(login == false) {
					login = dj.login(scan, conn);
				}
				boolean admin = false;
				try {
					admin = dj.isAdmin(conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
				if(admin == true) {
					dj.adminChoices();
				}
				dj.userchoices();
				int optionChoice;
				while(scan.hasNextInt()) {
					optionChoice = scan.nextInt();
					scan.nextLine();
					if(optionChoice == 0) {
						System.out.println("Goodbye!");
						System.exit(0);
					}
					else if(optionChoice == 1)
						dj.rateMovie(scan, conn);
					else if(optionChoice == 2)
						dj.getMoviesByTitle(scan, conn);
					else if(optionChoice == 3)
						dj.viewTickets(scan, conn);
					else
						System.out.println("Please enter a valid choice");
					if(admin == true) {
						dj.adminChoices();
					}
					dj.userchoices();
				}
			}
			else if(choice == 2) { // register
				int register = dj.register(scan, conn);
				if(register == 1) {
					System.out.println("Successfully Registered! Please log in");
				}
				else {
					System.out.println("Could not register. Please log in");
				}
			}
			else if(choice == 3){
				System.out.println("Goodbye!");
				System.exit(0);
			}
			else {
				System.out.println("Please enter an appropriate value");
			}
			mainMenuPrompt();
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 02:49:20.482
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 02:49:20.482
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 03:06:31.030
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("Available Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("");

		System.out.print("Enter your choice: ");
	}
	
	public void viewUsersTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, User.numTickets, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		int count = 0;
		System.out.println("All tickets held by users");
		
		while(rs.next()) {
			count++;
			System.out.println("");
			System.out.println("UserID: " + rs.getInt(1));
			System.out.println("First Name: " + rs.getString(2));
			System.out.println("Last Name: " + rs.getString(3));
			System.out.println("Email: " + rs.getString(4));
			System.out.println("Number of Tickets: " + rs.getInt(5));
			System.out.println("Movie Title: " + rs.getString(6));
			System.out.println("MovieID: " + rs.getInt(7));
			System.out.println("TicketID: " + rs.getInt(8));
			System.out.println("Start Time: " + rs.getTime(9));
			System.out.println("End Time: " + rs.getTime(10));
			System.out.println("Cinema Name: " + rs.getString(11));
		}
	}
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of" + count + "ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all users that have tickets");
		System.out.println("1002. Add a new movie to a theater");
		System.out.println("1003. Delete a movie");
	}
	
	public addNewMovieToTheater()
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		mainMenuPrompt();
		while(scan.hasNextInt()) {
			int choice = scan.nextInt();
			scan.nextLine(); //consume \n
			if(choice == 1) {
				boolean login = false;
				while(login == false) {
					login = dj.login(scan, conn);
				}
				boolean admin = false;
				try {
					admin = dj.isAdmin(conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
				if(admin == true) {
					dj.adminChoices();
				}
				dj.userchoices();
				int optionChoice;
				while(scan.hasNextInt()) {
					optionChoice = scan.nextInt();
					scan.nextLine();
					if(optionChoice == 0) {
						System.out.println("Goodbye!");
						System.exit(0);
					}
					else if(optionChoice == 1)
						dj.rateMovie(scan, conn);
					else if(optionChoice == 2)
						dj.getMoviesByTitle(scan, conn);
					else if(optionChoice == 3)
						dj.viewTickets(scan, conn);
					else if(optionChoice == 1001)
						dj.viewUsersTickets(scan, conn);
					else
						System.out.println("Please enter a valid choice");
					if(admin == true) {
						dj.adminChoices();
					}
					dj.userchoices();
				}
			}
			else if(choice == 2) { // register
				int register = dj.register(scan, conn);
				if(register == 1) {
					System.out.println("Successfully Registered! Please log in");
				}
				else {
					System.out.println("Could not register. Please log in");
				}
			}
			else if(choice == 3){
				System.out.println("Goodbye!");
				System.exit(0);
			}
			else {
				System.out.println("Please enter an appropriate value");
			}
			mainMenuPrompt();
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 03:06:31.034
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 03:06:31.035
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 03:06:36.078
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("Available Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("");

		System.out.print("Enter your choice: ");
	}
	
	public void viewUsersTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, User.numTickets, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		int count = 0;
		System.out.println("All tickets held by users");
		
		while(rs.next()) {
			count++;
			System.out.println("");
			System.out.println("UserID: " + rs.getInt(1));
			System.out.println("First Name: " + rs.getString(2));
			System.out.println("Last Name: " + rs.getString(3));
			System.out.println("Email: " + rs.getString(4));
			System.out.println("Number of Tickets: " + rs.getInt(5));
			System.out.println("Movie Title: " + rs.getString(6));
			System.out.println("MovieID: " + rs.getInt(7));
			System.out.println("TicketID: " + rs.getInt(8));
			System.out.println("Start Time: " + rs.getTime(9));
			System.out.println("End Time: " + rs.getTime(10));
			System.out.println("Cinema Name: " + rs.getString(11));
		}
	}
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of" + count + "ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all users that have tickets");
		System.out.println("1002. Add a new movie to a theater");
		System.out.println("1003. Delete a movie");
	}
	
	public addNewMovieToTheater(Scanner scan, Connection conn)
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		mainMenuPrompt();
		while(scan.hasNextInt()) {
			int choice = scan.nextInt();
			scan.nextLine(); //consume \n
			if(choice == 1) {
				boolean login = false;
				while(login == false) {
					login = dj.login(scan, conn);
				}
				boolean admin = false;
				try {
					admin = dj.isAdmin(conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
				if(admin == true) {
					dj.adminChoices();
				}
				dj.userchoices();
				int optionChoice;
				while(scan.hasNextInt()) {
					optionChoice = scan.nextInt();
					scan.nextLine();
					if(optionChoice == 0) {
						System.out.println("Goodbye!");
						System.exit(0);
					}
					else if(optionChoice == 1)
						dj.rateMovie(scan, conn);
					else if(optionChoice == 2)
						dj.getMoviesByTitle(scan, conn);
					else if(optionChoice == 3)
						dj.viewTickets(scan, conn);
					else if(optionChoice == 1001)
						dj.viewUsersTickets(scan, conn);
					else
						System.out.println("Please enter a valid choice");
					if(admin == true) {
						dj.adminChoices();
					}
					dj.userchoices();
				}
			}
			else if(choice == 2) { // register
				int register = dj.register(scan, conn);
				if(register == 1) {
					System.out.println("Successfully Registered! Please log in");
				}
				else {
					System.out.println("Could not register. Please log in");
				}
			}
			else if(choice == 3){
				System.out.println("Goodbye!");
				System.exit(0);
			}
			else {
				System.out.println("Please enter an appropriate value");
			}
			mainMenuPrompt();
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 03:06:36.079
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 03:06:36.081
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.ui 4 0 2018-11-19 03:16:10.081
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Widget.filters(Widget.java:826)
	at org.eclipse.swt.widgets.Control.scrollWheel(Control.java:2565)
	at org.eclipse.swt.widgets.Link.scrollWheel(Link.java:585)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6049)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:232)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2115)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2411)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6041)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5280)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3710)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1170)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1059)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:667)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:597)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:656)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:592)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1498)

!ENTRY org.eclipse.jdt.core 4 4 2018-11-19 03:25:19.900
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	public static void mainMenuPrompt() {
		System.out.println("Main Menu");
		System.out.println("1. Login");
		System.out.println("2. Register");
		System.out.println("3. Quit");
	}
	
	public void mainMenu(Scanner scan) {
		mainMenuPrompt();
		while(!scan.hasNext("[1-3]")) {
			System.out.println("Please choose an appropriate value");
			mainMenuPrompt();
			scan.next();
		}
	}
	
	public boolean isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			return true;
		}
		return false;
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.println("Welcome " + rs.getString("firstName") + "!");
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("Available Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("");

		System.out.print("Enter your choice: ");
	}
	
	public void viewUsersTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, User.numTickets, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		int count = 0;
		System.out.println("All tickets held by users");
		
		while(rs.next()) {
			count++;
			System.out.println("");
			System.out.println("UserID: " + rs.getInt(1));
			System.out.println("First Name: " + rs.getString(2));
			System.out.println("Last Name: " + rs.getString(3));
			System.out.println("Email: " + rs.getString(4));
			System.out.println("Number of Tickets: " + rs.getInt(5));
			System.out.println("Movie Title: " + rs.getString(6));
			System.out.println("MovieID: " + rs.getInt(7));
			System.out.println("TicketID: " + rs.getInt(8));
			System.out.println("Start Time: " + rs.getTime(9));
			System.out.println("End Time: " + rs.getTime(10));
			System.out.println("Cinema Name: " + rs.getString(11));
		}
	}
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of" + count + "ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("MovieID\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all users that have tickets");
		System.out.println("1002. Add a new movie to a theater");
		System.out.println("1003. Delete a movie");
	}
	
	public void deleteMovie()
	
	public void addNewMovieToTheater(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO theater VALUES(@theater_id, @cinema_id, @movie_ID, @end_time, @start_time)";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.println("Enter the theaterID: ");
		int theaterID = scan.nextInt();
		ps.setInt(1, theaterID);
		System.out.println("Enter the cinemaID: ");
		int cinemaID = scan.nextInt();
		ps.setInt(2, cinemaID);
		System.out.println("Enter the movieID: ");
		int movieID = scan.nextInt();
		ps.setInt(3, movieID);
		System.out.println("Enter the start time: ");
		String st = scan.next();
		System.out.println("Enter the end time: ");
		String et = scan.next();
		Time start = Time.valueOf(st);
		Time end = Time.valueOf(et);
		ps.setTime(4, start);
		ps.setTime(5, end);
		int result = ps.executeUpdate();
		if(result == 1) {
			System.out.println("Successfully added Movie to Theater");
		}
		else {
			System.out.println("Unable to add movie to Theater");
		}
	}
	
	public static void main(String[] args) throws SQLException {
		DejaView dj = new DejaView("root", "password", "localhost", 3306, "DEJAVIEW");
		Connection conn = null;
		try {
			conn = dj.getConnection();
			System.out.println("Connected to database");
		} catch (SQLException e) {
			System.out.println("ERROR: Could not connect to the database");
			e.printStackTrace();
			return;
		}
		
		System.out.println("Welcome to DejaView: A Movie Ticket Reservation System!");
		Scanner scan = new Scanner(System.in);
		mainMenuPrompt();
		while(scan.hasNextInt()) {
			int choice = scan.nextInt();
			scan.nextLine(); //consume \n
			if(choice == 1) {
				boolean login = false;
				while(login == false) {
					login = dj.login(scan, conn);
				}
				boolean admin = false;
				try {
					admin = dj.isAdmin(conn);
				} catch (SQLException e) {
					e.printStackTrace();
				}
				if(admin == true) {
					dj.adminChoices();
				}
				dj.userchoices();
				int optionChoice;
				while(scan.hasNextInt()) {
					optionChoice = scan.nextInt();
					scan.nextLine();
					if(optionChoice == 0) {
						System.out.println("Goodbye!");
						System.exit(0);
					}
					else if(optionChoice == 1)
						dj.rateMovie(scan, conn);
					else if(optionChoice == 2)
						dj.getMoviesByTitle(scan, conn);
					else if(optionChoice == 3)
						dj.viewTickets(scan, conn);
					else if(optionChoice == 1001)
						dj.viewUsersTickets(scan, conn);
					else
						System.out.println("Please enter a valid choice");
					if(admin == true) {
						dj.adminChoices();
					}
					dj.userchoices();
				}
			}
			else if(choice == 2) { // register
				int register = dj.register(scan, conn);
				if(register == 1) {
					System.out.println("Successfully Registered! Please log in");
				}
				else {
					System.out.println("Could not register. Please log in");
				}
			}
			else if(choice == 3){
				System.out.println("Goodbye!");
				System.exit(0);
			}
			else {
				System.out.println("Please enter an appropriate value");
			}
			mainMenuPrompt();
		}
		
	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-11-19 03:25:19.902
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-11-19 03:25:19.903
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2018-12-07 16:11:42.763
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package dejaview;

import java.sql.*;
import java.util.*;

public class DejaView {
	
	private String userName;
	private String password;
	private String serverName;
	private int portNumber;
	private String dbName;
	private boolean isAdmin;
	private String userEmail;
	private String userPassword;
	private int userID;
	
	
	public DejaView(String userName, String password, String serverName, int portNumber, String dbName) {
		this.userName = userName;
		this.password = password;
		this.serverName = serverName;
		this.portNumber = portNumber;
		this.dbName = dbName;
	}
	/**
	 * Get a new database connection
	 * 
	 * @return
	 * @throws SQLException
	 */
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		Properties connectionProps = new Properties();
		connectionProps.put("user", this.userName);
		connectionProps.put("password", this.password);
		
		try {
			conn = DriverManager.getConnection("jdbc:mysql://"
					+ this.serverName + ":" + this.portNumber + "/" + this.dbName,
					connectionProps);
		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
		}
		return conn;
	}
	
	
	public boolean getIsAdmin()
	
	
	public void isAdmin(Connection conn) throws SQLException {
		String query = "SELECT isAdmin FROM USER WHERE email=? and password=?";
		PreparedStatement st = conn.prepareStatement(query);
		st.setString(1, this.userEmail);
		st.setString(2, this.userPassword);
		ResultSet rs = st.executeQuery();
		rs.next();
		if(rs.getBoolean(1) == true) {
			this.isAdmin = true;
		}
		else {
			this.isAdmin = false;
		}
	}
	
	public boolean login(Scanner scan, Connection conn) throws SQLException {
		boolean success = false;
		System.out.print("Please enter your email: ");
		this.userEmail = scan.next();
		System.out.print("Please enter your password: ");
		this.userPassword = scan.next();
		
		String query = "SELECT * FROM USER where email=? and password=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ps.setString(2, this.userPassword);
		ResultSet rs = ps.executeQuery();
		if(!rs.next()) {
			System.out.println("Login Failed! Please try again");
		}
		else {
			String rsEmail = rs.getString("email");
			String rsPass = rs.getString("password");
			if(this.userEmail.equals(rsEmail) && this.userPassword.equals(rsPass)) {
				System.out.print("\nWelcome " + rs.getString("firstName") + "!");
				isAdmin(conn);
				if(this.isAdmin == true) {
					System.out.println(" You have admin privileges");
				}
				this.userID = rs.getInt("userID");
			}
			
			success = true;
			
		}
		return success;
	}
	
	public int register(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO USER VALUES(?,?,?,?,?,?,?)";
		String tableCount = "SELECT COUNT(*) FROM USER";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(tableCount);
		int count = 0;
		while(rs.next()) {
			count = rs.getInt(1) + 1;
		}
		System.out.print("Please enter your First Name: ");
		String firstName = scan.next();
		System.out.print("Please enter your Last Name: ");
		String lastName = scan.next();
		System.out.print("Please enter your email address: ");
		String email = scan.next();
		System.out.print("Please enter your password: ");
		String password = scan.next();
		System.out.print("Please enter optional keyword: ");
		String admin = scan.next();
		
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, count);
		ps.setString(2, firstName);
		ps.setString(3, lastName);
		ps.setString(4, email);
		ps.setString(5, password);
		if(admin.equals("admin")) {
			ps.setBoolean(6, true);
		} else {
			ps.setBoolean(6, false);
		}
		ps.setInt(7, 0);
		
		return ps.executeUpdate();
	}
	
	public void userchoices() {
		System.out.println("");
		System.out.println("User Operations");
		System.out.println("0. Exit program");
		System.out.println("1. Rate a movie");
		System.out.println("2. Search for movie by title");
		System.out.println("3. View your tickets");
		System.out.println("More operations are coming soon!");
		System.out.println("");

		System.out.print("Select an operation: ");
	}
	
	public void viewUsersTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, User.numTickets, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("All tickets held by users");
		while(rs.next()) {
			System.out.println("");
			System.out.println("UserID: " + rs.getInt(1));
			System.out.println("First Name: " + rs.getString(2));
			System.out.println("Last Name: " + rs.getString(3));
			System.out.println("Email: " + rs.getString(4));
			System.out.println("Number of Tickets: " + rs.getInt(5));
			System.out.println("Movie Title: " + rs.getString(6));
			System.out.println("MovieID: " + rs.getInt(7));
			System.out.println("TicketID: " + rs.getInt(8));
			System.out.println("Start Time: " + rs.getTime(9));
			System.out.println("End Time: " + rs.getTime(10));
			System.out.println("Cinema Name: " + rs.getString(11));
		}
	}
	
	public void viewTickets(Scanner scan, Connection conn) throws SQLException {
		String query = "SELECT  User.userID, User.firstName, User.lastName, User.email, Movie.movieTitle, Movie.movieID, Ticket.ticketID, Theater.startTime,Theater.endTime, Cinema.cinemaName FROM TICKET INNER JOIN USER ON User.userID=ticket.userID INNER JOIN MOVIE ON Movie.movieID = ticket.movieID INNER JOIN CINEMA ON Cinema.cinemaID=ticket.cinemaID INNER JOIN THEATER ON Theater.theaterID=ticket.theaterID AND Theater.movieID=ticket.movieID AND User.email=?";
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setString(1, this.userEmail);
		ResultSet rs = ps.executeQuery();
		System.out.println("");
		System.out.println("You ticket(s)");
		System.out.println("userID\tfirstName\tlastName\temail\tmovieTitle\tmovieID\tticketID\tstartTime\tendTime\tcinemaName");
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println(rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getInt(6) + "\t" + rs.getInt(7) + "\t" +rs.getTime(8) + "\t" + rs.getTime(9) + "\t" + rs.getString(10) + "\t");
		}
		System.out.println("You have a total of " + count + " ticket(s)");
	}
	
	public void getMoviesByTitle(Scanner scan, Connection conn) throws SQLException {
		String query = "select * from movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.print("Please enter the title: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		ResultSet rs = ps.executeQuery();
		int count = 0;
		while(rs.next()) {
			count++;
			System.out.println("\n" + "movieID: " + rs.getInt(1) + "\n" + "movieTitle: " + rs.getString(2) + "\n" + "genre: " + rs.getString(3) + "\n" + "actors: " + rs.getString(4) + "\n" + "director: " + rs.getString(5) + "\n" + "duration: " + rs.getInt(6) + " minutes" + "\n" + "rating: " + rs.getDouble(7) +"/10"+ "\n" + "releaseYear: " +rs.getInt(8));
		}
		if(count == 0) {
			System.out.println("Sorry that movie doesn't exist");
		}
	}
	
	public void getMovies(Connection conn) throws SQLException {
		String query = "select movieID, movieTitle from Movie";
		Statement st = conn.createStatement();
		ResultSet rs = st.executeQuery(query);
		System.out.println("Here are the available movies\n");
		System.out.println("MovieID\t\tMovie Title");
		while(rs.next()) {
			System.out.println(rs.getInt("movieID") + "\t" + rs.getString("movieTitle"));
		}
		System.out.println("");
	}
	
	public void rateMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO Rating (userID,movieID,ratingNumber) VALUES(?,?,?)";
		getMovies(conn);
		System.out.print("Please enter the movieID of the movie you would like to rate: ");
		int id = scan.nextInt();
		System.out.print("Please enter rating [1-10] you would like to give: ");
		int rating = scan.nextInt();
		PreparedStatement ps = conn.prepareStatement(query);
		ps.setInt(1, this.userID);
		ps.setInt(2, id);
		ps.setInt(3, rating);
		ps.executeUpdate();
		System.out.println("Rating has been successfully added!");
		
	}
	
	public void adminChoices() {
		System.out.println("");
		System.out.println("Admin Operations");
		System.out.println("1001. See all users that have tickets");
		System.out.println("1002. Add a new movie to a theater");
		System.out.println("1003. Delete a movie");
		System.out.println("More operations are coming soon!");
	}
	
	public void deleteMovie(Scanner scan, Connection conn) throws SQLException {
		String query = "Delete from Movie where movieTitle=?";
		PreparedStatement ps = conn.prepareStatement(query);
		getMovies(conn);
		System.out.print("Enter the title of the movie you would like to delete: ");
		String title = scan.nextLine();
		ps.setString(1, title);
		int result = ps.executeUpdate();
		if(result == 1) {
			System.out.println("Successfully deleted " + title);
		}
		else {
			System.out.println("Something went wrong");
		}
		
	}
	
	public void addNewMovieToTheater(Scanner scan, Connection conn) throws SQLException {
		String query = "INSERT INTO theater VALUES(?, ?, ?, ?, ?)";
		PreparedStatement ps = conn.prepareStatement(query);
		System.out.println("Enter the theaterID: ");
		int theaterID = scan.nextInt();
		ps.setInt(1, theaterID);
		System.out.println("Enter the cinemaID: ");
		int cinemaID = scan.nextInt();
		ps.setInt(2, cinemaID);
		System.out.println("Enter the movieID: ");
		int movieID = scan.nextInt();
		ps.setInt(3, movieID);
		System.out.println("Enter the start time[hh:mm:ss]: ");
		String st = scan.next();
		System.out.println("Enter the end time[hh:mm:ss]: ");
		String et = scan.next();
		Time start = Time.valueOf(st);
		Time end = Time.valueOf(et);
		ps.setTime(4, start);
		ps.setTime(5, end);
		int result = ps.executeUpdate();
		if(result == 1) {
			System.out.println("Successfully added Movie to Theater");
		}
		else {
			System.out.println("Unable to add movie to Theater");
		}
	}
	
	

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2018-12-07 16:11:42.784
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2018-12-07 16:11:42.785
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2931)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1390)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:340)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:199)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:265)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:593)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:91)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:733)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:799)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SESSION 2018-12-08 22:32:15.002 -----------------------------------------------
eclipse.buildId=4.8.0.I20180611-0500
java.version=1.8.0_144
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/rakeshkonda/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/rakeshkonda/.eclipse_keyring

!ENTRY org.eclipse.core.resources 2 10035 2018-12-08 22:32:21.638
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.core.net 1 0 2018-12-08 22:32:23.227
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.egit.core 2 0 2018-12-08 22:32:23.306
!MESSAGE Builtin LFS support not present/detected
!STACK 0
java.lang.ClassNotFoundException: org.eclipse.jgit.lfs.BuiltinLFS cannot be found by org.eclipse.egit.core_5.0.0.201806131550-r
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:508)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.eclipse.egit.core.Activator.registerBuiltinLFS(Activator.java:279)
	at org.eclipse.egit.core.Activator.start(Activator.java:212)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1002)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:354)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:114)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:505)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:392)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:454)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.egit.ui.Activator$RepositoryChangeScanner.<init>(Activator.java:921)
	at org.eclipse.egit.ui.Activator.setupRepoChangeScanner(Activator.java:1034)
	at org.eclipse.egit.ui.Activator.start(Activator.java:336)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1002)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:354)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:114)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:505)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:392)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:470)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:419)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:411)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:609)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:177)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:931)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:60)
	at org.eclipse.ui.internal.services.WorkbenchServiceRegistry.getSourceProviders(WorkbenchServiceRegistry.java:174)
	at org.eclipse.ui.internal.services.SourceProviderService.readRegistry(SourceProviderService.java:104)
	at org.eclipse.ui.internal.Workbench$34.runWithException(Workbench.java:2378)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:32)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:233)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:144)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4860)
	at org.eclipse.ui.internal.StartupThreading.runWithoutExceptions(StartupThreading.java:95)
	at org.eclipse.ui.internal.Workbench.initializeDefaultServices(Workbench.java:2373)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:1654)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2859)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:597)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:656)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:592)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1498)
